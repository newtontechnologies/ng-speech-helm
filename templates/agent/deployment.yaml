{{- if (gt .Values.externalAgent.replicas  0) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ng-speech.agent" . }}
  labels:
    {{- include "ng-speech.labels" $ | nindent 4 }}
    component: {{ include "ng-speech.agent" . }}
spec:
  replicas: {{ .Values.externalAgent.replicas }}
  selector:
    matchLabels:
      {{- include "ng-speech.selectorLabels" $ | nindent 6 }}
      component: {{ include "ng-speech.agent" . }}
  {{- if .Values.externalAgent.updateStrategy }}
  strategy: {{- toYaml .Values.externalAgent.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- if .Values.externalAgent.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.externalAgent.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
        checksum/agent-secret: {{ include (print $.Template.BasePath "/agent/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "ng-speech.selectorLabels" $ | nindent 8 }}
        component: {{ include "ng-speech.agent" . }}
        {{- if .Values.externalAgent.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.externalAgent.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if (or .Values.imagePullSecret.enabled .Values.global.imagePullSecrets) }}
      imagePullSecrets:
      {{- if .Values.imagePullSecret.enabled }}
        - name: {{ include "ng-speech.imagePullSecret" .}}
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.externalAgent.automountServiceAccountToken }}
      terminationGracePeriodSeconds: {{ .Values.externalAgent.terminationGracePeriodSeconds }}
      containers:
        - name: agent
          image: {{ include "ng-speech.agentImage" . }}
          imagePullPolicy: {{ $.Values.imagePullPolicy }}
          ports:
            - name: monitor
              containerPort: 8080
            - name: grpc-api
              containerPort: 8081
          args:
          {{- if .Values.externalAgent.config.sharedWorkspace.enabled }}
            - "--workspace={{ .Values.externalAgent.config.sharedWorkspace.dir }}"
          {{- end }}
            - "--registry-endpoint={{- include "ng-speech.core" $ }}:8081"
            - "--graceful-shutdown-timeout={{ .Values.externalAgent.terminationGracePeriodSeconds }}s"
          {{- range .Values.externalAgent.args }}
            - "{{ . }}"
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "ng-speech.agentCfg" $ }}
            {{- if .Values.externalAgent.extraEnvFrom }}
            {{ toYaml .Values.externalAgent.extraEnvFrom | nindent 12 }}
            {{- end }}
          env:
            - name: NG_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NG_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if .Values.externalAgent.extraEnvVars }}
          {{- toYaml .Values.externalAgent.extraEnvVars | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.externalAgent.resources | nindent 12 }}
          {{- if .Values.externalAgent.config.sharedWorkspace.enabled }}
          volumeMounts:
            - name: workspace
              mountPath: {{ .Values.externalAgent.config.sharedWorkspace.dir }}
              readOnly: true
          {{- end }}
      volumes:
      {{- if .Values.externalAgent.config.sharedWorkspace.enabled }}
        - name: workspace
          persistentVolumeClaim:
            claimName: {{ include "ng-speech.workspacePvc" $ }}
      {{- end }}
      {{- if .Values.externalAgent.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.externalAgent.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.externalAgent.podAffinityPreset "component" (include "ng-speech.agent" .) "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.externalAgent.podAntiAffinityPreset "component" (include "ng-speech.agent" .) "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.externalAgent.nodeAffinityPreset.type "key" .Values.externalAgent.nodeAffinityPreset.key "values" .Values.externalAgent.nodeAffinityPreset.values) | nindent 10 }}
     {{- end }}
     {{- if .Values.externalAgent.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.externalAgent.nodeSelector "context" $) | nindent 8 }}
     {{- end }}
     {{- if .Values.externalAgent.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.externalAgent.tolerations "context" $) | nindent 8 }}
     {{- end }}
     {{- if .Values.externalAgent.priorityClassName }}
      priorityClassName: {{ .Values.externalAgent.priorityClassName | quote }}
     {{- end }}
     {{- if .Values.externalAgent.schedulerName }}
      schedulerName: {{ .Values.externalAgent.schedulerName }}
     {{- end }}
{{- end }}
