{{- range $name, $agent := .Values.agent }}
{{- if (gt (int $agent.count)  0) }}

{{- if (ne $name "default") }}
{{ $agent = (mustMergeOverwrite (deepCopy $.Values.agent.default) $agent ) }}
{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{  printf "%s-%s" (include "ng-speech.agent" $) $name }}
  labels:
    {{- include "ng-speech.labels" $ | nindent 4 }}
    component: {{ include "ng-speech.agent" $ }}
    agent-name: {{ $name }}
spec:
  replicas: {{ $agent.count }}
  selector:
    matchLabels:
      {{- include "ng-speech.selectorLabels" $ | nindent 6 }}
      component: {{ include "ng-speech.agent" $ }}
      agent-name: {{ $name }}
  {{- if $agent.updateStrategy }}
  strategy: {{- toYaml $agent.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- if $agent.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" $agent.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
        checksum/agent-secret: {{ include (print $.Template.BasePath "/agent/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "ng-speech.selectorLabels" $ | nindent 8 }}
        component: {{ include "ng-speech.agent" $ }}
        agent-name: {{ $name }}
        {{- if $agent.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" $agent.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if (or $.Values.imagePullSecret.username $.Values.global.imagePullSecrets) }}
      imagePullSecrets:
      {{- if $.Values.imagePullSecret.username }}
        - name: {{ include "ng-speech.imagePullSecret" $ }}
      {{- end }}
      {{- if $.Values.global.imagePullSecrets }}
      {{- toYaml $.Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- end }}
      automountServiceAccountToken: {{ $agent.automountServiceAccountToken }}
      terminationGracePeriodSeconds: {{ $agent.terminationGracePeriodSeconds }}
      containers:
        - name: agent
          image: {{ printf "%s:%s" $agent.image.repository  ($agent.image.tag | default $.Chart.AppVersion) }}
          imagePullPolicy: {{ $.Values.imagePullPolicy }}
          ports:
            - name: monitor
              containerPort: 8080
            - name: grpc-api
              containerPort: 8081
          args:
            - agent
          {{- if $agent.config.sharedWorkspace.enabled }}
            - "--workspace={{ $agent.config.sharedWorkspace.dir }}"
          {{- end }}
            - "--registry-endpoint={{- include "ng-speech.core" $ }}:8081"
            - "--graceful-shutdown-timeout={{ $agent.terminationGracePeriodSeconds }}s"
          {{- range $agent.args }}
            - "{{ . }}"
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "ng-speech.agentCfg" $ }}
            {{- if $agent.extraEnvFrom }}
            {{ toYaml $agent.extraEnvFrom | nindent 12 }}
            {{- end }}
          env:
            - name: NG_GRACEFUL_SHUTDOWN_TIMEOUT
              value: "{{ $agent.terminationGracePeriodSeconds }}s"
            - name: NG_NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NG_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- if $agent.extraEnvVars }}
          {{- toYaml $agent.extraEnvVars | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $agent.resources | nindent 12 }}
          {{- if $agent.config.sharedWorkspace.enabled }}
          volumeMounts:
            - name: workspace
              mountPath: {{ $agent.config.sharedWorkspace.dir }}
              readOnly: true
          {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            {{- toYaml $agent.readinessProbe | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            {{- toYaml $agent.livenessProbe | nindent 12 }}
      volumes:
      {{- if ($agent.config).sharedWorkspace.enabled }}
        - name: workspace
          persistentVolumeClaim:
            claimName: {{ include "ng-speech.workspacePvc" $ }}
      {{- end }}
      {{- if $agent.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" $agent.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" $agent.podAffinityPreset "component" (include "ng-speech.agent" $) "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" $agent.podAntiAffinityPreset "component" (include "ng-speech.agent" $) "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" $agent.nodeAffinityPreset.type "key" $agent.nodeAffinityPreset.key "values" $agent.nodeAffinityPreset.values) | nindent 10 }}
     {{- end }}
     {{- if $agent.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" $agent.nodeSelector "context" $) | nindent 8 }}
     {{- end }}
     {{- if $agent.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" $agent.tolerations "context" $) | nindent 8 }}
     {{- end }}
     {{- if $agent.priorityClassName }}
      priorityClassName: {{ $agent.priorityClassName | quote }}
     {{- end }}
     {{- if $agent.schedulerName }}
      schedulerName: {{ $agent.schedulerName }}
     {{- end }}
{{- end }}
{{- end }}
