apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ng-speech.core" . }}
  labels:
    {{- include "ng-speech.labels" . | nindent 4 }}
    component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ng-speech.selectorLabels" . | nindent 6 }}
      component: core
  {{- if .Values.core.updateStrategy }}
  strategy: {{- toYaml .Values.core.updateStrategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
      {{- if .Values.core.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.core.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
        checksum/core-secret: {{ include (print $.Template.BasePath "/core/secret.yaml") . | sha256sum }}
      labels:
        {{- include "ng-speech.selectorLabels" . | nindent 8 }}
        component: core
        {{- if .Values.core.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.core.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if (or .Values.imagePullSecret.enabled .Values.global.imagePullSecrets) }}
      imagePullSecrets:
      {{- if .Values.imagePullSecret.enabled }}
        - name: {{ include "ng-speech.imagePullSecret" .}}
      {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.core.automountServiceAccountToken }}
      terminationGracePeriodSeconds: {{ .Values.core.terminationGracePeriodSeconds }}
      containers:
        - name: core
          image: {{ include "ng-speech.coreImage" . }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - core
          {{- if .Values.core.args }}
            {{- range .Values.core.args }}
            - "{{ . }}"
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
            - name: grpc
              containerPort: 8081
            - name: monitor
              containerPort: 8082
          envFrom:
            - secretRef:
                name: {{ include "ng-speech.coreCfg" .}}
          env:
          {{- with .Values.core.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: history
              mountPath: {{ .Values.core.config.history.dir }}
          {{- if .Values.core.config.sharedWorkspace.enabled }}
            - name: workspace
              mountPath: {{ .Values.core.config.sharedWorkspace.dir }}
          {{- end }}
          {{- if .Values.core.config.users }}
            - name: users
              mountPath: {{ .Values.core.config.usersDir }}
          {{- end}}
          resources:
            {{- toYaml .Values.core.resources | nindent 12 }}
      volumes:
        {{- if .Values.core.config.sharedWorkspace.enabled }}
        - name: workspace
          persistentVolumeClaim:
            claimName: {{ include "ng-speech.workspacePvc" . }}
        {{- end }}
        {{- if .Values.core.config.history.persistence.enabled }}
        - name: history
          persistentVolumeClaim:
            claimName: {{ include "ng-speech.historyPvc" . }}
        {{- else }}
        - name: history
          emptyDir:
            sizeLimit: {{ .Values.core.config.history.persistence.size }}
        {{- end }}
        {{- if .Values.core.config.users }}
        - name: users
          secret:
            secretName: {{ include "ng-speech.usersCfg" .}}
        {{- end }}
      {{- if .Values.core.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.core.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.core.nodeAffinityPreset.type "key" .Values.core.nodeAffinityPreset.key "values" .Values.core.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.core.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.core.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.core.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.core.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.core.priorityClassName }}
      priorityClassName: {{ .Values.core.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.core.schedulerName }}
      schedulerName: {{ .Values.core.schedulerName }}
      {{- end }}

