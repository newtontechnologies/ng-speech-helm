---
nameOverride: ""
fullnameOverride: ""

imagePullPolicy: IfNotPresent

global:
  storageClass: ""
  imagePullSecrets: [ ]

imagePullSecret:
  enabled: false
  domain: docker.io
  username: ""
  password: ""
  email: "nobody@email.com"

core:
  image:
    repository: newtontechnologies/ng-core
    tag: ""
    distribution: ""
  updateStrategy:
    type: RollingUpdate
  config:
    license:
      token: ""
    login:
      jwt:
        key: "insecure-key"
        audience: ""
        ttl: "4h"
      admin:
        username: ngadmin
        password: ngadmin
    agent:
      token: "insecure-token"
      # number of embedded agents
      count: 0
    users: [ ]
    # users:
    #   - name: user1
    #     password: $2a$12$JzH4Z.hZ1Q.5bMvO5wycq.dYpSzZYn36hVgAm2V3jemW/aT5njVXe # brycpt hash or plaintext
    #     permissions: [admin]
    #     requestLimit: 128         # set to 0 for unlimited
    usersDir: /var/lib/ng/users
    sharedWorkspace:
      dir: /var/lib/ng/shared-workspace
      persistence:
        enabled: false
        storageClass: ""
        size: 40Gi
    history:
      dir: /var/lib/ng/history
      persistence:
        enabled: false
        storageClass: ""
        size: 10Gi
  args: [ ]
  extraEnvVars: [ ]
  podLabels: { }
  podAnnotations: { }
  resources: { }
  affinity: { }
  nodeAffinityPreset:
    ## Allowed values: `soft` or `hard`
    type: ""
    key: ""
    values: [ ]
  nodeSelector: { }
  priorityClassName: ""
  schedulerName: ""
  automountServiceAccountToken: false
  tolerations: [ ]
  terminationGracePeriodSeconds: 600

# agents
agent:
  count: 0
  image:
    repository: newtontechnologies/ng-core
    tag: ""
    distribution: ""
  updateStrategy:
    type: RollingUpdate
  config:
    sharedWorkspace:
      enabled: false
      dir: /var/lib/ng/shared-workspace
  args: [ ]
  extraEnvVars: [ ]
  extraEnvFrom: [ ]
  terminationGracePeriodSeconds: 600
  podLabels: { }
  podAnnotations: { }
  resources:
    requests:
      cpu: 1
      memory: 3Gi
  affinity: { }
  ## Allowed values: `soft` or `hard`
  podAffinityPreset: ""
  ## Allowed values: `soft` or `hard`
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    ## Allowed values: `soft` or `hard`
    type: ""
    key: ""
    values: [ ]
  nodeSelector: { }
  priorityClassName: ""
  schedulerName: ""
  automountServiceAccountToken: false
  tolerations: [ ]
  pdb:
    enabled: true
    minAvailable: ""
    maxUnavailable: "25%"

serviceMonitor:
  enabled: false

traefikIngressRoute:
  enabled: true
  host: ""
  tls:
    secretName: ""
  entrypoints:
    - websecure
    - web

traefik:
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      memory: 256Mi
  deployment:
    replicas: 1
  rbac:
    namespaced: true
  providers:
    kubernetesCRD:
      enabled: true
    kubernetesIngress:
      enabled: false
  ingressRoute:
    dashboard:
      enabled: true
  ports:
    web:
      expose: true
    websecure:
      expose: true
  service:
    type: ClusterIP
